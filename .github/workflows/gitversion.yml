on:
  pull_request:
    branches:
      - develop
      - main
  push:
    branches:
      - develop
      - main
      - "release/**"
      - "hotfix/**"

env:
  GITVERSION: "gittools/gitversion:5.10.0-alpine.3.14-6.0"
  MAIN_BRANCHES: ("develop" "main")
  GITVERSION_TAG_PROPERTY_PULL_REQUESTS: .SemVer
  GITVERSION_TAG_PROPERTY_DEFAULT: .SemVer
  GITVERSION_TAG_PROPERTY_DEVELOP: .MajorMinorPatch,.PreReleaseLabelWithDash
  GITVERSION_TAG_PROPERTY_RELEASE: .MajorMinorPatch,.PreReleaseLabelWithDash
  GITVERSION_TAG_PROPERTY_HOTFIX: .MajorMinorPatch,.PreReleaseLabelWithDash
  GITVERSION_TAG_PROPERTY_MAIN: .MajorMinorPatch

jobs:
  gitversion:
    name: gitversion
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Fetch all history for all tags and branches
        run: git fetch --unshallow && git checkout --track origin/develop && git checkout --track origin/main

      - name: Checkout to branch
        run: |
          if [ "${GITHUB_EVENT_NAME}" = 'push' ]; then
            DIFF_DEST="${GITHUB_REF_NAME}"
          else
            DIFF_DEST="${GITHUB_HEAD_REF}"
          fi
          git checkout ${DIFF_DEST}

      - name: Calculate changed files
        id: calculate_changed_files
        run: |
          if [ "${GITHUB_EVENT_NAME}" = 'push' ]; then
            DIFF_DEST="${GITHUB_REF_NAME}"
            DIFF_SOURCE=$(git rev-parse "${DIFF_DEST}"^1)
          else
            DIFF_DEST="${GITHUB_HEAD_REF}"
            DIFF_SOURCE="${GITHUB_BASE_REF}"
          fi
          # use main as source if current branch is a release branch
          if [ "$(echo "${DIFF_DEST}" | grep -o '^release/')" = "release/" ]; then
            DIFF_SOURCE="main"
          fi
          # use main as source if current branch is a hotfix branch
          if [ "$(echo "${DIFF_DEST}" | grep -o '^hotfix/')" = "hotfix/" ]; then
            DIFF_SOURCE="main"
          fi

          # calculate changed files
          changed_files=$(git diff "${DIFF_SOURCE}" "${DIFF_DEST}" --name-only | grep -o '^app/[a-zA-Z-]*' | sort | uniq)
          changed_files=$(printf '%s' "$changed_files" | jq --raw-input --slurp '.')
          echo "::set-output name=changed_files::$changed_files"
          echo "::set-output name=diff_source::$DIFF_SOURCE"
          echo "::set-output name=diff_dest::$DIFF_DEST"
          echo "DIFF_SOURCE='$DIFF_SOURCE'"
          echo "DIFF_DEST='$DIFF_DEST'"
          echo "changed_files='$(echo "$changed_files" | sed 'N;s/\n/, /g')'"

      - name: Calculate app version
        id: calculate_app_version
        run: |
          docker run --rm -v "$(pwd):/repo" ${GITVERSION} /repo /config "/repo/app/.gitversion.yml"
          gitversion_calc=$(docker run --rm -v "$(pwd):/repo" ${GITVERSION} /repo /config "/repo/app/.gitversion.yml")
          GITVERSION_TAG_PROPERTY_NAME="GITVERSION_TAG_PROPERTY_PULL_REQUESTS"
          GITVERSION_TAG_PROPERTY=${!GITVERSION_TAG_PROPERTY_NAME}
          app_version=$(echo "${gitversion_calc}" | jq -r "[${GITVERSION_TAG_PROPERTY}] | join(\"\")")
          echo "::set-output name=app_version::${app_version}"
          echo "App version is v${app_version}"

      - name: Update PR description
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          PR_NUMBER=$(echo $GITHUB_REF | awk 'BEGIN { FS = "/" } ; { print $3 }')
          PR_BODY="## App Version\n\nNew version: v${{ steps.calculate_app_version.outputs.app_version }}"
          PR_BODY=$(printf '%s' "$PR_BODY" | jq --raw-input --slurp '.')
          jq -nc '{"body": $PR_BODY}' | \
          curl -sL  -X PATCH -d @- \
            -H "Content-Type: application/json" \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/$GITHUB_REPOSITORY/pulls/$PR_NUMBER"

      - name: Tag build
        if: ${{ github.event_name == 'push' && (startsWith(steps.calculate_changed_files.outputs.diff_dest, 'release') || startsWith(steps.calculate_changed_files.outputs.diff_dest, 'hotfix') || contains(env.MAIN_BRANCHES, steps.calculate_changed_files.outputs.diff_dest)) }}
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions"
          app_version=${{ steps.calculate_app_version.outputs.app_version }}
          previous_commit_count=$(git tag -l | grep "^app/v$(echo "${gitversion_calc}" | jq -r ".MajorMinorPatch")-$(echo "${gitversion_calc}" | jq -r ".PreReleaseLabel")" | grep -o -E '\.[0-9]+$' | grep -o -E '[0-9]+$' | sort -nr | head -1)
          next_commit_count=$((previous_commit_count+1))
          full_app_version="${app_version}.${next_commit_count}"
          git tag -a "app/v${full_app_version}" -m "app/v${full_app_version}"
          git push origin "app/v${full_app_version}"
